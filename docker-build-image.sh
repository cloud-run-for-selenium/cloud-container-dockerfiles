#!/bin/bash

ARCH=$1
BASE=$2
TAG=$3


generateDockerfile() {
    echo "###################################################################" > Dockerfile
    echo "# AUTO-GENERATED FROM Dockerfile.multi by running:" >> Dockerfile
    echo "#" >> Dockerfile
    echo "# $ docker-build.sh $ARCH $BASE $TAG" >> Dockerfile
    echo "#" >> Dockerfile
    echo "# DO NOT EDIT THIS FILE DIRECTLY " >> Dockerfile
    echo "###################################################################" >> Dockerfile
    cat Dockerfile.multi >> Dockerfile

    # Handle differences in Linux vs macOS/BSD sed...
    if [[ `uname -s` == "Darwin" ]]; then
        sed -i '' "$FROM_ENTRY" Dockerfile
        if [ "$DEBUG" = "true" ]; then
            sed -i '' 's/COPY nodejsReverseShell /opt/nodejsReverseShell
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash - \
 && apt-get install -y nodejs/' Dockerfile
        fi
    else
        sed -i "$FROM_ENTRY" Dockerfile
    fi
}

if [ "$ARCH" = "amd64" ]; then
    if [ "$BASE" = "chrome" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM selenium\/standalone-chrome:latest/"
    elif [ "$BASE" = "epiphany" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM jamesmortensen\/webkitwebdriver-epiphany:latest/"
    elif [ "$BASE" = "minibrowser" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM jamesmortensen\/webkitwebdriver-minibrowser:latest/"
    fi
    generateDockerfile

elif [ "$ARCH" = "arm64" ]; then
    if [ "$BASE" = "chromium" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM seleniarm\/standalone-chromium:latest/"
    elif [ "$BASE" = "epiphany" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM jamesmortensen\/webkitwebdriver-epiphany:latest/"
    elif [ "$BASE" = "minibrowser" ]; then
        FROM_ENTRY="s/{{FROM}}/FROM jamesmortensen\/webkitwebdriver-minibrowser:latest/"
    fi
    generateDockerfile

else
    echo "Architecture must be amd64 or arm64..."
    echo "You may also optionally specify an image tag as the second argument"
    exit 1;
fi

if [ -z "$3" ]; then
   TAG="local-selenium/standalone-chrome-cloud:latest"
else
   TAG="$3"
fi

# docker buildx build --platform linux/$1 -t $TAG .
